(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[17],{TmBa:function(n,t,e){"use strict";e.r(t);var a=e("cDcd"),o=e.n(a),r=e("dEAq"),c=e("H1Ra"),i=o.a.memo((n=>{n.demos;return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("p",null,"\u4e00\u4e2a ",o.a.createElement("code",null,"jsoniter")," \u7684\u4f7f\u7528\u793a\u4f8b"),o.a.createElement(c["a"],{code:'package main\n\nimport "github.com/json-iterator/go"\nimport "fmt"\n\nfunc main() {\n\t// plain map\n\t// testMap := map[string]interface{}{\n\t// \t"a": 123,\n\t// \t"b": []int{123},\n\t// \t"c": []int{456},\n\t// }\n\n\tvar json = jsoniter.ConfigCompatibleWithStandardLibrary\n\ttestStr := `{"a":1,"b":[1,2],"c":[3,4], "d": {"d0": 1}}`\n\n\tvar m map[string]interface{}\n\tjson.Unmarshal([]byte(testStr), &m)\n\n\tfor k, v := range m {\n\t\tfmt.Println(k, "=", v)\n\t}\n}',lang:"go"})))}));t["default"]=n=>{var t=o.a.useContext(r["context"]),e=t.demos;return o.a.useEffect((()=>{var t;null!==n&&void 0!==n&&null!==(t=n.location)&&void 0!==t&&t.hash&&r["AnchorLink"].scrollToAnchor(decodeURIComponent(n.location.hash.slice(1)))}),[]),o.a.createElement(i,{demos:e})}}}]);